#! /usr/bin/env python

"""Non-terminal symbols of Python grammar (from "graminit.h")."""

#  This file is automatically generated; please don't muck it up!
#
#  To update the symbols in this file, 'cd' to the top directory of
#  the python source tree after building the interpreter and run:
#
#    python Lib/symbol.py

#--start constants--
single_input = 256
file_input = 257
eval_input = 258
decorator = 259
decorators = 260
funcdef = 261
parameters = 262
varargslist = 263
fpdef = 264
fplist = 265
stmt = 266
simple_stmt = 267
small_stmt = 268
expr_stmt = 269
augassign = 270
print_stmt = 271
del_stmt = 272
pass_stmt = 273
flow_stmt = 274
break_stmt = 275
continue_stmt = 276
return_stmt = 277
yield_stmt = 278
raise_stmt = 279
import_stmt = 280
import_name = 281
import_from = 282
import_as_name = 283
dotted_as_name = 284
import_as_names = 285
dotted_as_names = 286
dotted_name = 287
global_stmt = 288
assert_stmt = 289
compound_stmt = 290
if_stmt = 291
while_stmt = 292
for_stmt = 293
try_stmt = 294
with_stmt = 295
with_var = 296
except_clause = 297
suite = 298
testlist_safe = 299
old_test = 300
old_lambdef = 301
test = 302
or_test = 303
and_test = 304
not_test = 305
comparison = 306
comp_op = 307
expr = 308
xor_expr = 309
and_expr = 310
shift_expr = 311
arith_expr = 312
term = 313
factor = 314
power = 315
atom = 316
listmaker = 317
testlist_gexp = 318
lambdef = 319
trailer = 320
subscriptlist = 321
subscript = 322
sliceop = 323
exprlist = 324
testlist = 325
dictsetmaker = 326
classdef = 327
arglist = 328
argument = 329
list_iter = 330
list_for = 331
list_if = 332
gen_iter = 333
gen_for = 334
gen_if = 335
testlist1 = 336
encoding_decl = 337
yield_expr = 338
#--end constants--

sym_name = {}
for _name, _value in globals().items():
    if type(_value) is type(0):
        sym_name[_value] = _name


def main():
    import sys
    import token
    if len(sys.argv) == 1:
        sys.argv = sys.argv + ["Include/graminit.h", "Lib/symbol.py"]
    token.main()

if __name__ == "__main__":
    main()
