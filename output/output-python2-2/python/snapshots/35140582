# This file is generated using the Signatures tool, don't edit
from objc import setSignatureForSelector
setSignatureForSelector('NSApplication', 'runModalSession:', 'i@:^{_NSModalSession=@@^{_NSModalSession}iciI^vi@@:^vi}')
setSignatureForSelector('NSATSTypesetter', 'lineFragmentRectForProposedRect:remainingRect:', '{_NSRect={_NSPoint=ff}{_NSSize=ff}}@:{_NSRect={_NSPoint=ff}{_NSSize=ff}}o^{_NSRect={_NSPoint=ff}{_NSSize=ff}}')
setSignatureForSelector('NSApplication', 'openFile:ok:', 'i@:@o^i')
setSignatureForSelector('NSApplication', 'openTempFile:ok:', 'i@:@o^i')
setSignatureForSelector('NSBitmapImageRep', 'getCompression:factor:', 'v@:o^io^f')
setSignatureForSelector('NSButton', 'getPeriodicDelay:interval:', 'v@:o^fo^f')
setSignatureForSelector('NSCell', 'getPeriodicDelay:interval:', 'v@:o^fo^f')
setSignatureForSelector('NSColor', 'getCyan:magenta:yellow:black:alpha:', 'v@:o^fo^fo^fo^fo^f')
setSignatureForSelector('NSColor', 'getHue:saturation:brightness:alpha:', 'v@:o^fo^fo^fo^f')
setSignatureForSelector('NSColor', 'getRed:green:blue:alpha:', 'v@:o^fo^fo^fo^f')
setSignatureForSelector('NSColor', 'getWhite:alpha:', 'v@:o^fo^f')
setSignatureForSelector('NSFont', 'positionOfGlyph:precededByGlyph:isNominal:', '{_NSPoint=ff}@:IIo^c')
setSignatureForSelector('NSFont', 'positionOfGlyph:struckOverGlyph:metricsExist:', '{_NSPoint=ff}@:IIo^c')
setSignatureForSelector('NSFont', 'positionOfGlyph:struckOverRect:metricsExist:', '{_NSPoint=ff}@:I{_NSRect={_NSPoint=ff}{_NSSize=ff}}o^c')
setSignatureForSelector('NSFont', 'positionOfGlyph:withRelation:toBaseGlyph:totalAdvancement:metricsExist:', '{_NSPoint=ff}@:IiIo^{_NSSize=ff}o^c')
setSignatureForSelector('NSInputManager', 'getMarkedText:selectedRange:', 'v@:o^@o^{_NSRange=II}')
setSignatureForSelector('NSLayoutManager', 'characterRangeForGlyphRange:actualGlyphRange:', '{_NSRange=II}@:{_NSRange=II}o^{_NSRange=II}')
setSignatureForSelector('NSLayoutManager', 'getFirstUnlaidCharacterIndex:glyphIndex:', 'v@:o^Io^I')
setSignatureForSelector('NSLayoutManager', 'glyphAtIndex:isValidIndex:', 'I@:Io^c')
setSignatureForSelector('NSLayoutManager', 'glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:', 'I@:{_NSPoint=ff}@o^f')
setSignatureForSelector('NSLayoutManager', 'glyphRangeForCharacterRange:actualCharacterRange:', '{_NSRange=II}@:{_NSRange=II}o^{_NSRange=II}')
setSignatureForSelector('NSLayoutManager', 'invalidateGlyphsForCharacterRange:changeInLength:actualCharacterRange:', 'v@:{_NSRange=II}io^{_NSRange=II}')
setSignatureForSelector('NSLayoutManager', 'invalidateLayoutForCharacterRange:isSoft:actualCharacterRange:', 'v@:{_NSRange=II}co^{_NSRange=II}')
setSignatureForSelector('NSLayoutManager', 'layoutRectForTextBlock:atIndex:effectiveRange:', '{_NSRect={_NSPoint=ff}{_NSSize=ff}}@:@Io^{_NSRange=II}')
setSignatureForSelector('NSLayoutManager', 'lineFragmentRectForGlyphAtIndex:effectiveRange:', '{_NSRect={_NSPoint=ff}{_NSSize=ff}}@:Io^{_NSRange=II}')
setSignatureForSelector('NSLayoutManager', 'lineFragmentRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:', '{_NSRect={_NSPoint=ff}{_NSSize=ff}}@:Io^{_NSRange=II}c')
setSignatureForSelector('NSLayoutManager', 'lineFragmentUsedRectForGlyphAtIndex:effectiveRange:', '{_NSRect={_NSPoint=ff}{_NSSize=ff}}@:Io^{_NSRange=II}')
setSignatureForSelector('NSLayoutManager', 'lineFragmentUsedRectForGlyphAtIndex:effectiveRange:allowLayout:', '{_NSRect={_NSPoint=ff}{_NSSize=ff}}@:Io^{_NSRange=II}c')
setSignatureForSelector('NSLayoutManager', 'temporaryAttributesAtCharacterIndex:effectiveRange:', '@@:Io^{_NSRange=II}')
setSignatureForSelector('NSLayoutManager', 'textContainerForGlyphAtIndex:effectiveRange:', '@@:Io^{_NSRange=II}')
setSignatureForSelector('NSMatrix', 'getNumberOfRows:columns:', 'v@:o^io^i')
setSignatureForSelector('NSMatrix', 'getRow:column:forPoint:', 'c@:o^io^i{_NSPoint=ff}')
setSignatureForSelector('NSMatrix', 'getRow:column:ofCell:', 'c@:o^io^i@')
setSignatureForSelector('NSNib', 'instantiateNibWithOwner:topLevelObjects:', 'c@:@N^@')
setSignatureForSelector('NSPSMatrix', 'invTransform:', '@@:N^{_NSPoint=ff}')
setSignatureForSelector('NSPSMatrix', 'invTransformRect:', '@@:N^{_NSRect={_NSPoint=ff}{_NSSize=ff}}')
setSignatureForSelector('NSPSMatrix', 'transform:', '@@:N^{_NSPoint=ff}')
setSignatureForSelector('NSPSMatrix', 'transformRect:', '@@:N^{_NSRect={_NSPoint=ff}{_NSSize=ff}}')
setSignatureForSelector('NSPageLayout', 'convertOldFactor:newFactor:', 'v@:n^fo^f')
setSignatureForSelector('NSSpellChecker', 'checkSpellingOfString:startingAt:language:wrap:inSpellDocumentWithTag:wordCount:', '{_NSRange=II}@:@i@cio^i')
setSignatureForSelector('NSSpellChecker', 'checkSpellingOfString:startingAt:language:wrap:inSpellDocumentWithTag:wordCount:reconnectOnError:', '{_NSRange=II}@:@i@cio^ic')
setSignatureForSelector('NSTableView', 'dragImageForRows:event:dragImageOffset:', '@@:@@N^{_NSPoint=ff}')
setSignatureForSelector('NSTextContainer', 'lineFragmentRectForProposedRect:sweepDirection:movementDirection:remainingRect:', '{_NSRect={_NSPoint=ff}{_NSSize=ff}}@:{_NSRect={_NSPoint=ff}{_NSSize=ff}}iio^{_NSRect={_NSPoint=ff}{_NSSize=ff}}')
setSignatureForSelector('NSTextView', 'dragImageForSelectionWithEvent:origin:', '@@:@N^{_NSPoint=ff}')
setSignatureForSelector('NSTypesetter', 'characterRangeForGlyphRange:actualGlyphRange:', '{_NSRange=II}@:{_NSRange=II}o^{_NSRange=II}')
setSignatureForSelector('NSTypesetter', 'layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:', 'v@:@IIo^I')
setSignatureForSelector('NSTypesetter', 'layoutParagraphAtPoint:', 'I@:N^{_NSPoint=ff}')
setSignatureForSelector('NSView', 'adjustPageHeightNew:top:bottom:limit:', 'v@:o^ffff')
setSignatureForSelector('NSView', 'adjustPageWidthNew:left:right:limit:', 'v@:o^ffff')
setSignatureForSelector('NSView', 'knowsPageRange:', 'c@:o^{_NSRange=II}')
setSignatureForSelector('NSWorkspace', 'getFileSystemInfoForPath:isRemovable:isWritable:isUnmountable:description:type:', 'c@:@o^co^co^co^@o^@')
setSignatureForSelector('NSWorkspace', 'getInfoForFile:application:type:', 'c@:@o^@o^@')
setSignatureForSelector('NSWorkspace', 'launchAppWithBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifier:', 'c@:@I@o^@')
setSignatureForSelector('NSWorkspace', 'openURLs:withAppBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifiers:', 'c@:@@I@o^@')
setSignatureForSelector('NSWorkspace', 'performFileOperation:source:destination:files:tag:', 'c@:@@@@o^i')
setSignatureForSelector('NSOpenGLPixelFormat', 'getValues:forAttribute:forVirtualScreen:', 'v@:o^lii')
# end of file
