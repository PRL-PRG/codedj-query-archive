"""
Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

Triangle    T(n)=n(n+1)/2   1, 3, 6, 10, 15, ...
Pentagonal  P(n)=n(3n1)/2   1, 5, 12, 22, 35, ...
Hexagonal   H(n)=n(2n1)     1, 6, 15, 28, 45, ...


It can be verified that T(285) = P(165) = H(143) = 40755.

Find the next triangle number that is also pentagonal and hexagonal.

Note:
We can show that all triangle numbers are included within the hexagonal numbers. See ... for proof (well, proof coming soon). 
This means that for a given hexagonal number we can find the triagonal index as:
  triagonal index = 2 * hexagonal index - 1
"""

pentagonal = lambda p: (3 * p ** 2 - p) / 2
hexagonal  = lambda h: h * (2 * h - 1)

p, h = 1, 1

while(True):
  number = pentagonal(p)
  diff = number - hexagonal(h)

  if (diff > 0): 
    # Pentagonal is larger than hexagonal, increase hexagonal
    h += 1
  elif (diff < 0):
    # Hexagonal is larger than pentagonal, increase pentagonal
    p += 1
  else:
    # Equal, print 'em
    print 2*h-1, p, h, '=>', number
    # ... and increase both to keep the chain going
    p += 1
    h += 1

  if number > 10000000000:
    break
